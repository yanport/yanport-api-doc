type: object
properties:
  searchQueryParam:
    $ref: ./SearchQueryParam.yaml
  queryString:
    type: string
  source:
    type: array
    items:
      $ref: ./Source.yaml
  ids:
    type: array
    items:
      type: string
  marketingTypes:
    type: array
    description: 'Une unique valeur est obligatoire lorsque source=`YANPORT'
    items:
      $ref: ./MarketingType.yaml
  crawlSources:
    type: array
    items:
      $ref: ./CrawlSource.yaml
  excludedCrawlSources:
    type: array
    items:
      $ref: ./CrawlSource.yaml
  active:
    type: boolean
  dealerTypes:
    type: array
    items:
      $ref: ./Dealer-Type.yaml
  dealerSubTypes:
    type: array
    items:
      $ref: ./Dealer-SubType.yaml
  dealerNames:
    type: array
    items:
      type: string
  exclusiveMandate:
    type: boolean
  dealerIds:
    type: integer
    format: int64
  excludedDealerIds:
    type: array
    items:
      type: integer
      format: int64
  externalDealerOrganizationIds:
    type: array
    items:
      type: string
  externalDealerIds:
    type: array
    items:
      type: string
  propertyIds:
    type: array
    items:
      type: string
  programIds:
    type: array
    items:
      type: string
  organizationIds:
    type: array
    description: correspond au champ "marketing.dealers.organizationId"
    items:
      type: string
  bloctelStatus:
    type: array
    items:
      type: string
  products:
    type: array
    items:
      $ref: ./ProductType.yaml
  propertyTypes:
    type: array
    items:
      $ref: ./PropertyType.yaml
  propertySubTypes:
    type: array
    items:
      $ref: ./PropertySubType.yaml
  roomCounts:
    type: array
    items:
      type: integer
  departments:
    type: array
    items:
      type: string
  zipCodes:
    type: array
    items:
      type: string
  cityIds:
    type: array
    items:
      type: integer
      format: int64
  agglomerationIds:
    type: array
    items:
      type: integer
      format: int64
  irisIds:
    type: array
    items:
      type: integer
      format: int64
  quarterIds:
    type: array
    items:
      type: integer
      format: int64
  parcelIds:
    type: array
    items:
      type: integer
      format: int64
  publicationDateMin:
    type: string
    format: date-time
  publicationDateMax:
    type: string
    format: date-time
  publicationDateRangeMin:
    type: string
    format: date-time
  publicationDateRangeMax:
    type: string
    format: date-time
  priceEventDateMin:
    type: string
    format: date-time
  priceEventDateMax:
    type: string
    format: date-time
  priceEventRangeDateMin:
    type: string
    format: date-time
  priceEventRangeDateMax:
    type: string
    format: date-time
  lastPriceDecreaseDateMin:
    type: string
    format: date-time
  lastPriceDecreaseDateMax:
    type: string
    format: date-time
  lastPriceUpdateDateMin:
    type: string
    format: date-time
  lastPriceUpdateDateMax:
    type: string
    format: date-time
  deleteDateMin:
    type: string
    format: date-time
  deleteDateMax:
    type: string
    format: date-time
  marketingStartDateMin:
    type: string
    format: date-time
  marketingStartDateMax:
    type: string
    format: date-time
  marketingEndDateMin:
    type: string
    format: date-time
  marketingEndDateMax:
    type: string
    format: date-time
  durationDaysMin:
    type: integer
  durationDaysMax:
    type: integer
  marketingDaysMin:
    type: integer
  marketingDaysMax:
    type: integer
  grossRentalYieldMin:
    type: number
    format: double
  grossRentalYieldMax:
    type: number
    format: double
  saleStatus:
    type: string
  surfaceMin:
    type: number
    format: double
    description: Surface minimum (si min et max non renseigné et que la source=`YANPORT` alors les biens récupéré auront le champ `features.geometry.surface` vide)
  surfaceMax:
    type: number
    format: double
    description: Surface maximum (si min et max non renseigné et que la source=`YANPORT` alors les biens récupéré auront le champ `features.geometry.surface` vide)
  roomCountMin:
    type: integer
    description: Nombre de pièces minimum (si min et max non renseigné et que la source=`YANPORT` alors les biens récupéré auront le champ `features.geometry.roomCount` vide)
  roomCountMax:
    type: integer
    description: Nombre de pièces maximum (si min et max non renseigné et que la source=`YANPORT` alors les biens récupéré auront le champ `features.geometry.roomCount` vide)
  priceMin:
    type: number
    format: double
  priceMax:
    type: number
    format: double
  priceM2Min:
    type: number
    format: double
  priceM2Max:
    type: number
    format: double
  priceHCMin:
    type: number
    format: double
  priceHCMax:
    type: number
    format: double
  priceM2HCMin:
    type: number
    format: double
  priceM2HCMax:
    type: number
    format: double
  priceCCMin:
    type: number
    format: double
  priceCCMax:
    type: number
    format: double
  priceM2CCMin:
    type: number
    format: double
  priceM2CCMax:
    type: number
    format: double
  priceEventRangePriceM2Min:
    type: number
    format: double
  priceEventRangePriceM2Max:
    type: number
    format: double
  priceEventCountMin:
    type: integer
  priceEventCountMax:
    type: integer
  negotiationMarginMin:
    type: number
    format: double
  negotiationMarginMax:
    type: number
    format: double
  feesMin:
    type: number
    format: double
  feesMax:
    type: number
    format: double
  depositMin:
    type: number
    format: double
  depositMax:
    type: number
    format: double
  furnished:
    type: boolean
  newBuild:
    type: boolean
  forBuild:
    type: boolean
  serviced:
    type: boolean
  constructionYearMin:
    type: integer
  constructionYearMax:
    type: integer
  floorLevelMin:
    type: integer
  floorLevelMax:
    type: integer
  landSurfaceMin:
    type: number
    format: double
  landSurfaceMax:
    type: number
    format: double
  generalStates:
    type: array
    items:
      type: string
  energyConsumptionDiagnosisLetters:
    type: array
    items:
      type: string
      example: 'D'
  greenhouseGasConsumptionDiagnosisLetters:
    type: array
    items:
      type: string
      example: 'D'
  energyDiagnosisDateMin:
    type: string
    format: date-time
  energyDiagnosisDateMax:
    type: string
    format: date-time
  missingFields:
    type: array
    items:
      type: string
  existingFields:
    type: array
    items:
      type: string
      example: 'features.geometry.roomCount'
  excludedIds:
    type: array
    items:
      type: string
  investmentRentalMonthlyPriceMin:
    type: number
    format: double
  investmentRentalMonthlyPriceMax:
    type: number
    format: double
  creationDateMin:
    type: string
    format: date-time
  creationDateMax:
    type: string
    format: date-time
  updateDateMin:
    type: string
    format: date-time
  updateDateMax:
    type: string
    format: date-time
  anomalyLevelMin:
    type: integer
    minimum: -1
    maximum: 3
    description: Niveau d'anomalie minimal (voir les valeurs correspondantes avec le paramètre `anomalyValues`)
  anomalyLevelMax:
    type: integer
    minimum: -1
    maximum: 3
    description: Niveau d'anomalie maximal (voir les valeurs correspondantes avec le paramètre `anomalyValues`)
  anomalyValues:
    type: array
    items:
      type: string
      enum:
        - UNKNOWN
        - SAFE
        - UNUSUAL
        - SUSPECT
        - ANORMAL
    description: Valeurs d'anomalie (UNKNOWN = -1, SAFE = 0, UNUSUAL = 1, SUSPECT = 2, ANORMAL = 3)
  marketStressScoreMin:
    type: number
    format: double
    description: Valeur de tension de marché minimal (uniquement pour la source=`YANPORT`)
  marketStressScoreMax:
    type: number
    format: double
    description: Valeur de tension de marché maximale (uniquement pour la source=`YANPORT`)
  marketStressValues:
    type: array
    items:
      $ref: ./MarketStressValue.yaml
  externalProperties:
    type: array
    items:
      type: string
      example:
        ID:externalId
  geoSearchQuery:
    $ref: ./GeoSearchQuery.yaml
